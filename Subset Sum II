class Solution {
    void sub_sum(int idx, vector<int>& nums, vector<vector<int>> &ans, vector<int> &ds){
        ans.push_back(ds);
        for(int i=idx;i<nums.size();i++){
            if(idx!=i && nums[i]==nums[i-1]){
                continue;
            }
            ds.push_back(nums[i]);
            sub_sum(i+1, nums, ans, ds);
            ds.pop_back();
        }
    }
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> ds;
        sort(nums.begin(), nums.end());
        sub_sum(0, nums, ans, ds);
        return ans;
    }
};
