#include<bits/stdc++.h>
using namespace std;
vector<string> get_maze_jump_path(int sr, int sc, int dr, int dc){
    if(sr==dr && sc==dc){
        vector<string>base;
        base.push_back("");
        return base;
    }
    vector<string>paths;
    for(int i=1;i<=dc-sc;i++){
        vector<string> hpaths=get_maze_jump_path(sr, sc+i, dr, dc);
        for(string p:hpaths){
            paths.push_back("h"+i+p);
        }
    }
    for(int i=1;i<=dr-sr;i++){
        vector<string> vpaths=get_maze_jump_path(sr+i, sc, dr, dc);
        for(string p:vpaths){
            paths.push_back("v"+i+p);
        }
    }
    for(int i=1;i<=dc-sc && i<=dr-sr;i++){
        vector<string> dpaths=get_maze_jump_path(sr+i, sc+i, dr, dc);
        for(string p:dpaths){
            paths.push_back("d"+i+p);
        }
    }
    return paths;
}
int main(){
    int n, m;
    cin>>n>>m;
    vector<string>v=get_maze_jump_path(1, 1, n, m);
    for(int i=0;i<v.size();i++){
        cout<<v[i]<<endl;
    }
}
